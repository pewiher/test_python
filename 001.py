# ¬°La Sonda Silenciosa! üõ∞Ô∏è
# Misi√≥n: Eres un intr√©pido explorador estelar en una misi√≥n crucial para mapear un sistema solar reci√©n descubierto. Tu objetivo es determinar la velocidad orbital instant√°nea de un planeta potencialmente habitable para evaluar su idoneidad para la vida.

# Desaf√≠o: La extra√±a interferencia c√≥smica en esta regi√≥n del espacio dificulta la obtenci√≥n de lecturas exitosas de tu esc√°ner de largo alcance.

# Datos Clave: Cuando el esc√°ner funciona, te proporciona:

# distance: La distancia recorrida por el planeta en su √≥rbita durante el per√≠odo de observaci√≥n (en unidades astron√≥micas).
# time: El tiempo transcurrido durante la observaci√≥n (en horas).
# Objetivo: Calcular la velocidad orbital instant√°nea del planeta hasta el n√∫mero entero m√°s cercano.

# Recursos:

# API para obtener una lectura del esc√°ner: [GET] /v1/s1/e1/resources/measurement (Siempre recibir√°s un c√≥digo de estado HTTP 200, incluso si el escaneo no es exitoso).
# Env√≠a tu respuesta aqu√≠: [POST] /v1/s1/e1/solution
# Consulta la Documentaci√≥n para m√°s detalles https://makers-challenge.altscore.ai/docs.
# ¬°Prep√°rate para desafiar la interferencia c√≥smica y desentra√±ar los secretos de este nuevo mundo! üöÄ

# Back to challenges

import requests
import math
from config import APIClientConfig

def parse_number(value, default=1):
    print(value)
    try:
        return float(value)
    except (ValueError, TypeError):
        return default

api = APIClientConfig(
    base_url='https://makers-challenge.altscore.ai/v1',
    api_key='b63fd137f2ac4053b7b378c3d26d87a8'
)


res = api.get("/s1/e1/resources/measurement")
data = res.json()

distance = parse_number(data.get("distance"))
time = parse_number(data.get("time"))

if not distance or not time or time == 0:
    raise Exception("Lectura inv√°lida. Reintenta.")

speed = round(distance / time)

post_data = {"speed": speed}
r = api.post("/s1/e1/solution", data=post_data)
print(r.json())
